Index: vendor/magento/module-checkout/Model/ShippingInformationManagement.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/magento/module-checkout/Model/ShippingInformationManagement.php b/vendor/magento/module-checkout/Model/ShippingInformationManagement.php
--- a/vendor/magento/module-checkout/Model/ShippingInformationManagement.php	(revision 714fc88bd827702dba3235e8a8324e2e0a4b3a9d)
+++ b/vendor/magento/module-checkout/Model/ShippingInformationManagement.php	(date 1668500144778)
@@ -7,6 +7,7 @@
 namespace Magento\Checkout\Model;

 use Magento\Checkout\Api\Data\PaymentDetailsInterface;
+use Magento\Framework\App\RequestInterface;
 use Magento\Checkout\Api\Data\ShippingInformationInterface;
 use Magento\Checkout\Api\ShippingInformationManagementInterface;
 use Magento\Customer\Api\AddressRepositoryInterface;
@@ -124,6 +125,7 @@
         AddressRepositoryInterface $addressRepository,
         ScopeConfigInterface $scopeConfig,
         TotalsCollector $totalsCollector,
+        RequestInterface $request,
         CartExtensionFactory $cartExtensionFactory = null,
         ShippingAssignmentFactory $shippingAssignmentFactory = null,
         ShippingFactory $shippingFactory = null
@@ -137,6 +139,7 @@
         $this->addressRepository = $addressRepository;
         $this->scopeConfig = $scopeConfig;
         $this->totalsCollector = $totalsCollector;
+        $this->request = $request;
         $this->cartExtensionFactory = $cartExtensionFactory ?: ObjectManager::getInstance()
             ->get(CartExtensionFactory::class);
         $this->shippingAssignmentFactory = $shippingAssignmentFactory ?: ObjectManager::getInstance()
@@ -166,6 +169,20 @@
         $address = $addressInformation->getShippingAddress();
         $this->validateAddress($address);

+        $uriString = $this->request->getUriString();
+        if (!$address->getFirstname() || !$address->getLastname() || !$address->getStreet()) {
+            $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+            $backTrace = '';
+            foreach ($debugBackTrace as $item) {
+                $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+            }
+            $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/debug-ticket-ITO0017-39.log');
+            $logger = new \Zend_Log();
+            $logger->addWriter($writer);
+            $logger->crit('Missing data shipping address when before save shipping address for quote ' . $quote->getId() . ' with uriString : '. $uriString . ' : ' . $backTrace);
+            $logger->info('Shipping before save data: ' . json_encode($address->getData()));
+        }
+
         if (!$address->getCustomerAddressId()) {
             $address->setCustomerAddressId(null);
         }
@@ -205,7 +222,18 @@
         }

         $shippingAddress = $quote->getShippingAddress();
-
+        if (!$shippingAddress->getFirstname() || !$shippingAddress->getLastname() || !$shippingAddress->getStreet()) {
+            $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+            $backTrace = '';
+            foreach ($debugBackTrace as $item) {
+                $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+            }
+            $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/debug-ticket-ITO0017-39.log');
+            $logger = new \Zend_Log();
+            $logger->addWriter($writer);
+            $logger->crit('Missing data shipping address when after save shipping address for quote ' . $quote->getId() . ' with uriString : '. $uriString . ' : ' . $backTrace);
+            $logger->info('Shipping after save data: ' . json_encode($shippingAddress->getData()));
+        }
         if (!$quote->getIsVirtual()
             && !$shippingAddress->getShippingRateByCode($shippingAddress->getShippingMethod())
         ) {
Index: vendor/magento/module-quote/Model/ShippingAddressManagement.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/magento/module-quote/Model/ShippingAddressManagement.php b/vendor/magento/module-quote/Model/ShippingAddressManagement.php
--- a/vendor/magento/module-quote/Model/ShippingAddressManagement.php	(revision 714fc88bd827702dba3235e8a8324e2e0a4b3a9d)
+++ b/vendor/magento/module-quote/Model/ShippingAddressManagement.php	(date 1668500144778)
@@ -7,6 +7,7 @@
 namespace Magento\Quote\Model;

 use Magento\Framework\App\ObjectManager;
+use Magento\Framework\App\RequestInterface;
 use Magento\Framework\Exception\InputException;
 use Magento\Framework\Exception\NoSuchEntityException;
 use Psr\Log\LoggerInterface as Logger;
@@ -68,7 +69,8 @@
         Logger $logger,
         \Magento\Customer\Api\AddressRepositoryInterface $addressRepository,
         \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
-        \Magento\Quote\Model\Quote\TotalsCollector $totalsCollector
+        \Magento\Quote\Model\Quote\TotalsCollector $totalsCollector,
+        RequestInterface $request
     ) {
         $this->quoteRepository = $quoteRepository;
         $this->addressValidator = $addressValidator;
@@ -76,6 +78,7 @@
         $this->addressRepository = $addressRepository;
         $this->scopeConfig = $scopeConfig;
         $this->totalsCollector = $totalsCollector;
+        $this->request = $request;
     }

     /**
@@ -103,6 +106,20 @@
             $address->setCustomerAddressId(null);
         }

+        $uriString = $this->request->getUriString();
+        $isFromCheckout = preg_match('/shipping-information/', $uriString);
+        if ($isFromCheckout && (!$address->getFirstname() || !$address->getLastname() || !$address->getStreet())) {
+            $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+            $backTrace = '';
+            foreach ($debugBackTrace as $item) {
+                $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+            }
+            $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/debug-ticket-ITO0017-39.log');
+            $logger = new \Zend_Log();
+            $logger->addWriter($writer);
+            $logger->crit('Missing data shipping address when assign shipping address for quote ' . $quote->getId() . ' with uriString : '. $uriString . ' : ' . $backTrace);
+            $logger->info('Shipping assign data: ' . json_encode($address->getData()));
+        }
         if ($customerAddressId) {
             $addressData = $this->addressRepository->getById($customerAddressId);
             $address = $quote->getShippingAddress()->importCustomerAddressData($addressData);
Index: vendor/magento/module-quote/Model/QuoteManagement.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/magento/module-quote/Model/QuoteManagement.php b/vendor/magento/module-quote/Model/QuoteManagement.php
--- a/vendor/magento/module-quote/Model/QuoteManagement.php	(revision 714fc88bd827702dba3235e8a8324e2e0a4b3a9d)
+++ b/vendor/magento/module-quote/Model/QuoteManagement.php	(date 1668500204665)
@@ -555,6 +555,20 @@
                     'email' => $quote->getCustomerEmail()
                 ]
             );
+
+            if (!$shippingAddress->getFirstname() || !$shippingAddress->getLastname() || !$shippingAddress->getStreet()) {
+                $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+                $backTrace = '';
+                foreach ($debugBackTrace as $item) {
+                    $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+                }
+                $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/debug-ticket-ITO0017-39.log');
+                $logger = new \Zend_Log();
+                $logger->addWriter($writer);
+                $logger->crit('Missing data shipping address when submit quote ' . $quote->getId() . ' : ' . $backTrace);
+                $logger->info('Shipping when submit quote data: ' . json_encode($shippingAddress->getData()));
+            }
+
             $shippingAddress->setData('quote_address_id', $quote->getShippingAddress()->getId());
             $addresses[] = $shippingAddress;
             $order->setShippingAddress($shippingAddress);
Index: vendor/magento/module-checkout/Model/TotalsInformationManagement.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/magento/module-checkout/Model/TotalsInformationManagement.php b/vendor/magento/module-checkout/Model/TotalsInformationManagement.php
--- a/vendor/magento/module-checkout/Model/TotalsInformationManagement.php	(revision 714fc88bd827702dba3235e8a8324e2e0a4b3a9d)
+++ b/vendor/magento/module-checkout/Model/TotalsInformationManagement.php	(date 1668500385417)
@@ -69,7 +69,19 @@
             }
         }
         $quote->collectTotals();
-
+        $shippingAddress = $quote->getShippingAddress();
+        if (!$shippingAddress->getPostcode() && !$shippingAddress->getCity() &&(!$shippingAddress->getFirstname() || !$shippingAddress->getLastname() || !$shippingAddress->getStreet())) {
+            $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+            $backTrace = '';
+            foreach ($debugBackTrace as $item) {
+                $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+            }
+            $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/debug-ticket-ITO0017-39.log');
+            $logger = new \Zend_Log();
+            $logger->addWriter($writer);
+            $logger->crit('Missing data shipping address when calculate quote ' . $quote->getId() . ' : ' . $backTrace);
+            $logger->info('Shipping when calculate data: ' . json_encode($shippingAddress->getData()));
+        }
         return $this->cartTotalRepository->get($cartId);
     }

