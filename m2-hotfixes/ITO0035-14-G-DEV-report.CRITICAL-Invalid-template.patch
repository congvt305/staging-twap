Index: vendor/magento/framework/View/Element/Template.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/magento/framework/View/Element/Template.php b/vendor/magento/framework/View/Element/Template.php
--- a/vendor/magento/framework/View/Element/Template.php	(revision 67c5037e3df2544d0d0205b3e9c08e92b3f88e6f)
+++ b/vendor/magento/framework/View/Element/Template.php	(date 1671516712393)
@@ -266,6 +266,23 @@
             $templatePath = $fileName ?: $this->getTemplate();
             $errorMessage = "Invalid template file: '{$templatePath}' in module: '{$this->getModuleName()}'"
                 . " block's name: '{$this->getNameInLayout()}'";
+            if ($this->getModuleName() == 'Magento_Cms') {
+                $writer = new \Zend_Log_Writer_Stream(BP . '/var/log/log-for-ticket-ITO0035-14.log');
+                $logger = new \Zend_Log();
+                $logger->addWriter($writer);
+                $logger->info($errorMessage);
+                $debugBackTrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
+                $backTrace = '';
+                foreach ($debugBackTrace as $item) {
+                    $backTrace .= @$item['class'] . ':' . @$item['line'] . @$item['type'] . @$item['function'] . " | ";
+                }
+                $logger->crit('Trace error invalid template: ' . $backTrace);
+                $logger->info('filename: ' . $fileName);
+                $logger->info('full action name: ' . $this->getRequest()->getFullActionName());
+                $logger->info('user agent: ' . isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : 'cannot get user agent');
+                $logger->info('request uri: ' . isset($_SERVER['REQUEST_URI'])) ? $_SERVER['REQUEST_URI'] : 'cannot get request uri';
+                $logger->info('block data: ' . json_encode($this->getData()));
+            }
             if ($this->_appState->getMode() === \Magento\Framework\App\State::MODE_DEVELOPER) {
                 throw new \Magento\Framework\Exception\ValidatorException(
                     new \Magento\Framework\Phrase(
